  <beans xmlns="http://www.springframework.org/schema/beans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:context="http://www.springframework.org/schema/context"
         xmlns:tx="http://www.springframework.org/schema/tx"
         xsi:schemaLocation="http://www.springframework.org/schema/beans
         https://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         https://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"><!--подключение к БД через стандартный драйвер и класс DMDS реализующий интерфейс DataSource-->
              <property name="driverClassName" value="org.postgresql.Driver"/>
              <property name="url" value="jdbc:postgresql://localhost:5432/register_office"/>
              <property name="username" value="postgres"/>
              <property name="password" value="2134"/>
       </bean>

       <bean name="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
              <property name="dataSource" ref="dataSource"/>
              <property name="packagesToScan"> <!--определяем пакет в котором у нас прячутся все наши Entity-->
                     <list>
                            <value>edu.javacourse.register.domain</value>
                     </list>
              </property>
              <property name="jpaVendorAdapter"> <!--к какому ORM мы собираемся подключаться к JPA через Hibernate в нашем случае -->
                     <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
              </property>
              <property name="jpaProperties">
                     <props>
                            <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL10Dialect</prop>
                            <prop key="hibernate.show_sql">true</prop>
                     </props>
              </property>


              <dependency>
                          <groupId>org.springframework</groupId>
                          <artifactId>spring-beans</artifactId>
                          <version>${spring.version}</version>
                      </dependency>

                      <dependency>
                          <groupId>org.springframework</groupId>
                          <artifactId>spring-context</artifactId>
                          <version>${spring.version}</version>
                      </dependency>

                      <dependency>
                          <groupId>org.springframework</groupId>
                          <artifactId>spring-orm</artifactId>
                          <version>${spring.version}</version>
                      </dependency>